@{
    var buttonColor = Color == "green" ? "button-green" : 
        Color == "red" ? "button-red" : 
        "button-blue";

    var buttonSize = Size == 1 ? "button-small" :
        Size == 2 ? "button-medium" :
        "button-big";
}

<button @onclick="@(async () => await Click())" class="button @buttonColor @buttonSize @Class" disabled="@(Disabled)">
    @if (Loading)
    {
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    }
    else
    {
        @Text
    }
</button>

@code {

    [Parameter]
    public string Text { get; set; } = "test";

    [Parameter]
    public string Color { get; set; } = "blue";

    [Parameter]
    public int Size { get; set; } = 1;

    [Parameter]
    public string Class { get; set; } = "";

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public bool LoadingSpinner { get; set; } = true;

    [Parameter]
    public Func<Task> OnClick { get; set; }

    public bool Loading;

    public async Task Click()
    {
        if (LoadingSpinner)
        {
            Loading = true;
            StateHasChanged();
        }

        if (OnClick != null)
            await OnClick();

        if (LoadingSpinner)
        {
            Loading = false;
            StateHasChanged();
        }
    }

    public void Refresh()
    {
        StateHasChanged();
    }
}
