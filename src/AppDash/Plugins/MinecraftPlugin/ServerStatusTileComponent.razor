@using AppDash.Plugins
@inherits AppDash.Plugins.Tiles.PluginTileComponent

@if (_isServerSet.HasValue)
{
    if (_isServerSet.Value)
    {
        <div class="d-flex flex-row align-items-center flex-grow-1">
            <div class="m-2 mr-3">
                <img width="64" height="64" src="@($"{_serverStatus.Favicon}")"/>
            </div>
            <div class="d-flex flex-column align-content-between flex-grow-1">
                <span class="font-weight-bold">@($"{PluginSettings.GetData<string>("Host")}")</span>
                <span>@($"{_serverStatus.Description.Text}")</span>
                <span>@($"{_serverStatus.Players.Online} / {_serverStatus.Players.Max} user(s) online")</span>
                <span>@($"Running {_serverStatus.Version.Name}")</span>
            </div>
        </div>

    }
    else
    {
        <span class="text-danger">Unable to get server status. Please set the server in the <a href="@($"/settings/plugins/{PluginKey}")">plugin settings</a>. If you've already done so the server may simply be down.</span>
    }
}

@code {
    public override string Url { get; set; }

    private bool? _isServerSet;

    private MinecraftServerHelper.StatusResponse _serverStatus;
    
    public override bool OnUpdate()
    {
        Console.WriteLine(Data);

        var serverStatus = Data.GetData<MinecraftServerHelper.StatusResponse>("ServerStatus");

        Console.WriteLine("ServerStatusTileComponent " + serverStatus);

        if (serverStatus != null)
        {
            _serverStatus = serverStatus;
        }

        _isServerSet = _serverStatus != null;

        return true;
    }

}
